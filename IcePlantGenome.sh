##Before starting, download raw genome files from the NCBI SRA database. The accession numbers are: (add once paper is published)
##In addition, refer to the documentation for each of the following software packages for installation instructions of the versions used in this analysis.
#nanoFilt/2.7.1
#flye/2.9.3
#pilon/1.24 
#bowtie2/2.4.5 
#samtools/1.18 
#busco/5.3.0 
#assembly-stats/1.0.1

##The first step consists in filtering the raw nanopore reads using NanoFilt.
##The following command filters the raw nanopore reads to remove reads shorter than 1000 bp, reads with an average quality score < Q10, and removes the first 500 bp of each read.

NanoFilt –l 1000 -q 10 --headcrop 500 < IceplantELF.fastq.gz > IceplantELF_filtered.fastq.gz

##Assembly using raw concatenated nanopore reads an average quality score > Q7 as input (concatenated reads from the fastq_pass output).
##Flye was used for assembly of raw nanopore reads.

flye --nano-raw IceplantELF_filtered.fastq.gz --genome-size 370m  --out-dir  Assembly --scaffold

##The previous line generates a file names “Assembly.fasta”. This file can is inputted in the following step. 
##The next step consists in improving the draft assembly by correcting the errors introduced by Nanopore using short reads generated by Illumina. Pilon was used to perform this assembly polishing step.

##In order to run Pilon, it is necessary to first map the Illumina reads to the draft assembly.
##This is achieved using bowtie2.

##Creation of a bowtie2 index for the draft assembly
bowtie2-build Assembly.fasta BowtieIndexIcePlant

##Map the Illumina reads to the draft assembly
bowtie2 -x BowtieIndexIcePlant -U IcePlantShortRead.fastq -S IcePlantNanoIllumina.sam

##The .sam file output from bowtie2 then needs to be formatted for input in Pilon. We use samtools to convert the .sam file to a .bam file, sort the .bam file by coordinates, and index it.

samtools view -bS IcePlantNanoIllumina.sam > IcePlantNanoIllumina.bam
samtools sort IcePlantNanoIllumina.bam -o IcePlantNanoIllumina_ Sorted.bam
samtools index IcePlantNanoIllumina_Sorted.bam

##The .bam file is now ready for input into Pilon. We can now run the first round of assembly polishing.

pilon --genome Assembly.fasta --fix all --bam IcePlantNanoIllumina_Sorted.bam –output PilonPolishing -Xmx30g --threads 4

##This step generates a new assembly file named “PilonPolishing.fasta”. As recommended by the Pilon documentation, a second round of polishing will be performed using PilonPolishing.fasta as input. Two rounds of polishing were used as more rounds were not found to further improve the draft assembly.

##Creation of a new bowtie2 index, mapping of the short reads against the polished assembly, formatting of the .bam file, and second round of polishing. 

bowtie2-build PilonPolishing.fasta BowtieIndexIcePlant_Round2
bowtie2 -x BowtieIndexIcePlant_Round2 -U IcePlantShortRead.fastq -S IcePlantNanoIllumina_Round2.sam
samtools view -bS IcePlantNanoIllumina_Round2.sam > IcePlantNanoIllumina_Round2.bam
samtools sort IcePlantNanoIllumina_Round2.bam -o IcePlantNanoIllumina_Round2_ Sorted.bam
samtools index IcePlantNanoIllumina_Round2_Sorted.bam
pilon --genome PilonPolishing.fasta --fix all --bam IcePlantNanoIllumina_Round2_Sorted.bam –output IcePlantAssembly_Polished -Xmx30g --threads 4

##A polished assembly file named “IcePlantAssembly_Polished.fasta” has been generated.
##Assembly metrics, such as lengths, number of contigs, number of gaps, and the N50 can be examined using “assembly-stats”. The output is generated in a file named “AssemblyStats.txt”.

assembly-stats IcePlantAssembly_Polished.fasta > AssemblyStats.txt

##Before moving forward with annotation, genome completeness was assessed using BUSCO. The embryophyta_odb10 database was used for this analysis.

busco -i IcePlantAssembly_Polished.fasta -l embryophyta_odb10 -o BuscoResults -m genome

##This analysis showed that the assembly was 98.3% complete, with 0.9% missing and 0.8% fragmented.
##The final assembly file is now ready for annotation. The annotation was performed using the MAKER2 pipeline.

##First, install the following software packages:

#maker/2.31.6 for genome annotation
#repeatmodeler/2.0 for de-novo repeat family identification.
#ltr_finder/1.07 for finding full-length LTR retrotransposons.
#ltrretriever/2.5 for identification of LTR retrotransposons
#pacbio/8.0.0 for PacBio SMRT sequencing data analysis
#isoseq3/3.2.2 for isoform-level transcriptome analysis
#lima/2.7.1 for IsoSeq data classification and processing
#augustus/3.4.0 for prediction of genes in eukaryotic genomic sequence
#gff3toolkit/2.0.3 for processing the gff files and converting to gtf
#iprscan/5.60 to query sequences against the InterPro databases
#ncbi_blast/2.14.1 to search for sequence similarities.
#snap/2.0.3 for gene prediction

##The following steps were performed to annotate the genome:

#RepeatModeler
#IsoSeq Analysis
#Maker2 Annotation - Round 1
#SNAP Training and Maker2 - Round 2
#Augustus Training
#Final Rounds of Maker2
#Functional Annotation
#Post-Processing and Quality Control

##In progress